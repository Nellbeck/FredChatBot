{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fogge\\\\source\\\\repos\\\\ChatBot\\\\chatbot-app\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const predefinedQuestions = [\"Who are you?\", \"What can you do?\", \"Tell me a joke!\", \"Where do you live?\", \"How can I contact you?\"];\n  const sendMessage = async messageText => {\n    if (!messageText.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: messageText\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    try {\n      const apiUrl = \"https://gray-ground-0d1b9b703.4.azurestaticapps.net\" || 'http://localhost:5000';\n      const response = await axios.post(`${apiUrl}/api/qna`, {\n        question: messageText\n      });\n      const botResponse = response.data.answer;\n      typeOutMessage(botResponse);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      typeOutMessage('Sorry, something went wrong.');\n    }\n  };\n\n  // Function to display message letter by letter\n  const typeOutMessage = fullMessage => {\n    let currentText = \"\";\n    let index = 0;\n    const interval = setInterval(() => {\n      if (index < fullMessage.length) {\n        currentText += fullMessage[index];\n        setMessages(prev => {\n          const newMessages = [...prev];\n          if (newMessages.length > 0 && newMessages[newMessages.length - 1].sender === 'bot') {\n            newMessages[newMessages.length - 1].text = currentText;\n          } else {\n            newMessages.push({\n              sender: 'bot',\n              text: currentText\n            });\n          }\n          return newMessages;\n        });\n        index++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 50); // Adjust speed of typing here\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') sendMessage(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '5px',\n        flexWrap: 'wrap',\n        marginBottom: '10px'\n      },\n      children: predefinedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(question),\n        style: {\n          padding: '8px 12px',\n          borderRadius: '5px',\n          border: '1px solid #ccc',\n          cursor: 'pointer'\n        },\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        minHeight: '300px',\n        overflowY: 'auto',\n        backgroundColor: '#f9f9f9'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'bot' ? 'left' : 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            background: msg.sender === 'bot' ? '#e0e0e0' : '#0084ff',\n            color: msg.sender === 'bot' ? '#000' : '#fff',\n            padding: '8px 12px',\n            borderRadius: '10px',\n            margin: '5px',\n            maxWidth: '80%',\n            whiteSpace: 'pre-wrap'\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        style: {\n          flex: 1,\n          padding: '10px',\n          fontSize: '16px'\n        },\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(input),\n        style: {\n          padding: '10px 20px',\n          marginLeft: '5px',\n          fontSize: '16px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","predefinedQuestions","sendMessage","messageText","trim","userMessage","sender","text","prev","apiUrl","response","post","question","botResponse","data","answer","typeOutMessage","error","console","fullMessage","currentText","index","interval","setInterval","length","newMessages","push","clearInterval","handleKeyPress","e","key","style","maxWidth","margin","fontFamily","children","display","gap","flexWrap","marginBottom","map","onClick","padding","borderRadius","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","minHeight","overflowY","backgroundColor","msg","textAlign","background","color","whiteSpace","marginTop","type","value","onChange","target","onKeyPress","flex","fontSize","placeholder","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Fogge/source/repos/ChatBot/chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const predefinedQuestions = [\r\n    \"Who are you?\",\r\n    \"What can you do?\",\r\n    \"Tell me a joke!\",\r\n    \"Where do you live?\",\r\n    \"How can I contact you?\"\r\n  ];\r\n\r\n  const sendMessage = async (messageText) => {\r\n    if (!messageText.trim()) return;\r\n    \r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const apiUrl = \"https://gray-ground-0d1b9b703.4.azurestaticapps.net\" || 'http://localhost:5000';\r\n      const response = await axios.post(`${apiUrl}/api/qna`, { question: messageText });\r\n      const botResponse = response.data.answer;\r\n      typeOutMessage(botResponse);\r\n      \r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      typeOutMessage('Sorry, something went wrong.');\r\n    }\r\n  };\r\n\r\n  // Function to display message letter by letter\r\n  const typeOutMessage = (fullMessage) => {\r\n    let currentText = \"\";\r\n    let index = 0;\r\n\r\n    const interval = setInterval(() => {\r\n      if (index < fullMessage.length) {\r\n        currentText += fullMessage[index];\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          if (newMessages.length > 0 && newMessages[newMessages.length - 1].sender === 'bot') {\r\n            newMessages[newMessages.length - 1].text = currentText;\r\n          } else {\r\n            newMessages.push({ sender: 'bot', text: currentText });\r\n          }\r\n          return newMessages;\r\n        });\r\n        index++;\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 50); // Adjust speed of typing here\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') sendMessage(input);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto', fontFamily: 'Arial, sans-serif' }}>\r\n      {/* Pre-defined Questions */}\r\n      <div style={{ display: 'flex', gap: '5px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n        {predefinedQuestions.map((question, index) => (\r\n          <button \r\n            key={index} \r\n            onClick={() => sendMessage(question)}\r\n            style={{ padding: '8px 12px', borderRadius: '5px', border: '1px solid #ccc', cursor: 'pointer' }}\r\n          >\r\n            {question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div \r\n        style={{\r\n          border: '1px solid #ccc', \r\n          padding: '10px', \r\n          minHeight: '300px', \r\n          overflowY: 'auto',\r\n          backgroundColor: '#f9f9f9'\r\n        }}\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'bot' ? 'left' : 'right' }}>\r\n            <div style={{\r\n              display: 'inline-block',\r\n              background: msg.sender === 'bot' ? '#e0e0e0' : '#0084ff',\r\n              color: msg.sender === 'bot' ? '#000' : '#fff',\r\n              padding: '8px 12px',\r\n              borderRadius: '10px',\r\n              margin: '5px',\r\n              maxWidth: '80%',\r\n              whiteSpace: 'pre-wrap'\r\n            }}>\r\n              {msg.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input Field */}\r\n      <div style={{ marginTop: '10px', display: 'flex' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          style={{ flex: 1, padding: '10px', fontSize: '16px' }}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <button onClick={() => sendMessage(input)} style={{ padding: '10px 20px', marginLeft: '5px', fontSize: '16px' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}