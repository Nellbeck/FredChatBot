{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const predefinedQuestions=[\"Who are you?\",\"What can you do?\",\"Tell me a joke!\",\"Where do you live?\",\"How can I contact you?\"];const sendMessage=async messageText=>{if(!messageText.trim())return;const userMessage={sender:'user',text:messageText};setMessages(prev=>[...prev,userMessage]);setInput(\"\");try{const apiUrl=process.env.REACT_APP_API_URL||'http://localhost:5000';const response=await axios.post(`${apiUrl}/api/qna`,{question:messageText});const botResponse=response.data.answer;typeOutMessage(botResponse);}catch(error){console.error('Error sending message:',error);typeOutMessage('Sorry, something went wrong.');}};// Function to display message letter by letter\nconst typeOutMessage=fullMessage=>{let currentText=\"\";let index=0;const interval=setInterval(()=>{if(index<fullMessage.length){currentText+=fullMessage[index];setMessages(prev=>{const newMessages=[...prev];if(newMessages.length>0&&newMessages[newMessages.length-1].sender==='bot'){newMessages[newMessages.length-1].text=currentText;}else{newMessages.push({sender:'bot',text:currentText});}return newMessages;});index++;}else{clearInterval(interval);}},50);// Adjust speed of typing here\n};const handleKeyPress=e=>{if(e.key==='Enter')sendMessage(input);};return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'600px',margin:'auto',fontFamily:'Arial, sans-serif'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'5px',flexWrap:'wrap',marginBottom:'10px'},children:predefinedQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(question),style:{padding:'8px 12px',borderRadius:'5px',border:'1px solid #ccc',cursor:'pointer'},children:question},index))}),/*#__PURE__*/_jsx(\"div\",{style:{border:'1px solid #ccc',padding:'10px',minHeight:'300px',overflowY:'auto',backgroundColor:'#f9f9f9'},children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{style:{textAlign:msg.sender==='bot'?'left':'right'},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'inline-block',background:msg.sender==='bot'?'#e0e0e0':'#0084ff',color:msg.sender==='bot'?'#000':'#fff',padding:'8px 12px',borderRadius:'10px',margin:'5px',maxWidth:'80%',whiteSpace:'pre-wrap'},children:msg.text})},index))}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress,style:{flex:1,padding:'10px',fontSize:'16px'},placeholder:\"Type your message here...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(input),style:{padding:'10px 20px',marginLeft:'5px',fontSize:'16px'},children:\"Send\"})]})]});}export default Chatbot;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","predefinedQuestions","sendMessage","messageText","trim","userMessage","sender","text","prev","apiUrl","process","env","REACT_APP_API_URL","response","post","question","botResponse","data","answer","typeOutMessage","error","console","fullMessage","currentText","index","interval","setInterval","length","newMessages","push","clearInterval","handleKeyPress","e","key","style","maxWidth","margin","fontFamily","children","display","gap","flexWrap","marginBottom","map","onClick","padding","borderRadius","border","cursor","minHeight","overflowY","backgroundColor","msg","textAlign","background","color","whiteSpace","marginTop","type","value","onChange","target","onKeyPress","flex","fontSize","placeholder","marginLeft"],"sources":["C:/Users/Fogge/source/repos/ChatBot/chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const predefinedQuestions = [\r\n    \"Who are you?\",\r\n    \"What can you do?\",\r\n    \"Tell me a joke!\",\r\n    \"Where do you live?\",\r\n    \"How can I contact you?\"\r\n  ];\r\n\r\n  const sendMessage = async (messageText) => {\r\n    if (!messageText.trim()) return;\r\n    \r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.post(`${apiUrl}/api/qna`, { question: messageText });\r\n      const botResponse = response.data.answer;\r\n      typeOutMessage(botResponse);\r\n      \r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      typeOutMessage('Sorry, something went wrong.');\r\n    }\r\n  };\r\n\r\n  // Function to display message letter by letter\r\n  const typeOutMessage = (fullMessage) => {\r\n    let currentText = \"\";\r\n    let index = 0;\r\n\r\n    const interval = setInterval(() => {\r\n      if (index < fullMessage.length) {\r\n        currentText += fullMessage[index];\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          if (newMessages.length > 0 && newMessages[newMessages.length - 1].sender === 'bot') {\r\n            newMessages[newMessages.length - 1].text = currentText;\r\n          } else {\r\n            newMessages.push({ sender: 'bot', text: currentText });\r\n          }\r\n          return newMessages;\r\n        });\r\n        index++;\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 50); // Adjust speed of typing here\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') sendMessage(input);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto', fontFamily: 'Arial, sans-serif' }}>\r\n      {/* Pre-defined Questions */}\r\n      <div style={{ display: 'flex', gap: '5px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n        {predefinedQuestions.map((question, index) => (\r\n          <button \r\n            key={index} \r\n            onClick={() => sendMessage(question)}\r\n            style={{ padding: '8px 12px', borderRadius: '5px', border: '1px solid #ccc', cursor: 'pointer' }}\r\n          >\r\n            {question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div \r\n        style={{\r\n          border: '1px solid #ccc', \r\n          padding: '10px', \r\n          minHeight: '300px', \r\n          overflowY: 'auto',\r\n          backgroundColor: '#f9f9f9'\r\n        }}\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'bot' ? 'left' : 'right' }}>\r\n            <div style={{\r\n              display: 'inline-block',\r\n              background: msg.sender === 'bot' ? '#e0e0e0' : '#0084ff',\r\n              color: msg.sender === 'bot' ? '#000' : '#fff',\r\n              padding: '8px 12px',\r\n              borderRadius: '10px',\r\n              margin: '5px',\r\n              maxWidth: '80%',\r\n              whiteSpace: 'pre-wrap'\r\n            }}>\r\n              {msg.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input Field */}\r\n      <div style={{ marginTop: '10px', display: 'flex' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          style={{ flex: 1, padding: '10px', fontSize: '16px' }}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <button onClick={() => sendMessage(input)} style={{ padding: '10px 20px', marginLeft: '5px', fontSize: '16px' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}