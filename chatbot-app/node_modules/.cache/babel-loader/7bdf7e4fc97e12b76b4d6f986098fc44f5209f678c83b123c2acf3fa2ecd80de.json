{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./App.css';// Import external CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const predefinedQuestions=[\"Who are you?\",\"What can you do?\",\"Tell me a joke!\",\"Where do you live?\",\"How can I contact you?\"];const sendMessage=async messageText=>{if(!messageText.trim())return;const userMessage={sender:'user',text:messageText};setMessages(prev=>[...prev,userMessage]);setInput(\"\");try{var _response$data,_response$data$answer;const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:7071/api/qna\";console.log(\"Sending request to:\",API_URL);const response=await axios.post(API_URL,{question:messageText});console.log(\"Full API Response:\",response);// ✅ Debugging log\nconsole.log(\"Response Data:\",response.data);// ✅ Check the actual data\nlet botResponse=\"Sorry, I didn't understand that.\";if(typeof response.data===\"string\"){botResponse=response.data;}else if(((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$answer=_response$data.answers)===null||_response$data$answer===void 0?void 0:_response$data$answer.length)>0){botResponse=response.data.answers[0].answer;}else{console.warn(\"No valid answer found in response.\");}console.log(\"Final Bot Response:\",botResponse);typeOutMessage(botResponse);}catch(error){console.error(\"Error sending message:\",error);typeOutMessage(\"Sorry, something went wrong.\");}};const typeOutMessage=fullMessage=>{let currentText=\"\";let index=0;const interval=setInterval(()=>{if(index<fullMessage.length){currentText+=fullMessage[index];setMessages(prev=>{const newMessages=[...prev];if(newMessages.length>0&&newMessages[newMessages.length-1].sender==='bot'){newMessages[newMessages.length-1].text=currentText;}else{newMessages.push({sender:'bot',text:currentText});}return newMessages;});index++;}else{clearInterval(interval);}},50);};const handleKeyPress=e=>{if(e.key==='Enter')sendMessage(input);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"predefined-questions\",children:predefinedQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(question),className:\"question-button\",children:question},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`message-container ${msg.sender}`,children:/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.sender}`,children:msg.text})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Type your message here...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(input),children:\"Send\"})]})]});}export default Chatbot;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","predefinedQuestions","sendMessage","messageText","trim","userMessage","sender","text","prev","_response$data","_response$data$answer","API_URL","process","env","REACT_APP_API_URL","console","log","response","post","question","data","botResponse","answers","length","answer","warn","typeOutMessage","error","fullMessage","currentText","index","interval","setInterval","newMessages","push","clearInterval","handleKeyPress","e","key","className","children","map","onClick","msg","type","value","onChange","target","onKeyPress","placeholder"],"sources":["C:/Users/Fogge/source/repos/ChatBot/chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Import external CSS\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const predefinedQuestions = [\r\n    \"Who are you?\",\r\n    \"What can you do?\",\r\n    \"Tell me a joke!\",\r\n    \"Where do you live?\",\r\n    \"How can I contact you?\"\r\n  ];\r\n\r\n  const sendMessage = async (messageText) => {\r\n    if (!messageText.trim()) return;\r\n  \r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput(\"\");\r\n  \r\n    try {\r\n      const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:7071/api/qna\";\r\n      console.log(\"Sending request to:\", API_URL);\r\n  \r\n      const response = await axios.post(API_URL, { question: messageText });\r\n  \r\n      console.log(\"Full API Response:\", response); // ✅ Debugging log\r\n      console.log(\"Response Data:\", response.data); // ✅ Check the actual data\r\n  \r\n      let botResponse = \"Sorry, I didn't understand that.\";\r\n  \r\n      if (typeof response.data === \"string\") {\r\n        botResponse = response.data;\r\n      } else if (response.data?.answers?.length > 0) {\r\n        botResponse = response.data.answers[0].answer;\r\n      } else {\r\n        console.warn(\"No valid answer found in response.\");\r\n      }\r\n  \r\n      console.log(\"Final Bot Response:\", botResponse);\r\n      typeOutMessage(botResponse);\r\n  \r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      typeOutMessage(\"Sorry, something went wrong.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const typeOutMessage = (fullMessage) => {\r\n    let currentText = \"\";\r\n    let index = 0;\r\n\r\n    const interval = setInterval(() => {\r\n      if (index < fullMessage.length) {\r\n        currentText += fullMessage[index];\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          if (newMessages.length > 0 && newMessages[newMessages.length - 1].sender === 'bot') {\r\n            newMessages[newMessages.length - 1].text = currentText;\r\n          } else {\r\n            newMessages.push({ sender: 'bot', text: currentText });\r\n          }\r\n          return newMessages;\r\n        });\r\n        index++;\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') sendMessage(input);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"predefined-questions\">\r\n        {predefinedQuestions.map((question, index) => (\r\n          <button key={index} onClick={() => sendMessage(question)} className=\"question-button\">\r\n            {question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n    <div className=\"chat-window\">\r\n      {messages.map((msg, index) => (\r\n        <div key={index} className={`message-container ${msg.sender}`}>\r\n          <div className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <button onClick={() => sendMessage(input)}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}